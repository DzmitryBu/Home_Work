Home_Work_2.loops.* (utils)
1. class Multiply1_1 - Задание 1.1. Перемножить числа от 1 до числа (включительно) введенного через аргумент к исполняемой программе.
		1.1.1. Используя только цикл
		1.1.2.* Используя рекурсию
2. class Multiply1_2 - 1.2. Все цифры из числа введенного через аргумент к исполняемой программе перемножить между собой и вывести ход вычислений 			в консоль.
3. class Task1_3 - 1.3. Возведение в степень. Через консоль пользователь вводит два числа.
4. class Task1_4 - 1.4.* Умножать число long a = 1; пока не произойдёт переполнение.
5. class Task1_5 -  1.5. Задачи в презентации. 
		1.5.1. Найти наибольшую цифру натурального числа
    		1.5.2. Вероятность четных случайных чисел
    		1.5.3. Посчитать четные и нечетные цифры числа
    		1.5.4. Ряд Фибоначчи
    		1.5.5. Вывести ряд чисел в диапазоне с шагом
    		1.5.6. Переворот числа
6. class Task1_6 - 1.6. Вывести таблицу умножения в консоль.

package Home_Work_2.arrays.*(utils)
7. class - 2.1. Создать класс ArraysUtils. В этом классе написать следующие методы:
		2.1.1. Написать метод public static int[] arrayFromConsole(). 			
		2.1.2. Написать метод public static int[] arrayRandom(int size, int maxValueExclusion).
8. class ArraysIteration - 2.2 Создать класс ArraysIteration. В этом клссе написать перебор массива при помощи do....while, while, for, foreach. Должно 		получиться 3 метода:
		2.2.1. Вывести все элементы в консоль.
		2.2.2. Вывести каждый второй элемент массива в консоль.
		2.2.3. Вывести все элементы массива в консоль в обратном порядке.
9. interface IArraysOperation - 2.3* Выполнить задание 2.2 иным способом. Создать интерфейс IArraysOperation с методами из задания, каждый метод 			должен принимать 	массив с которым он будет работать. Написать 4 отдельных класса и реализовать данный интерфейс:
class DoWhileOperation - 	2.3.1. DoWhileOperation - во всех методах можно использовать только do....while
class WhileOperation - 	2.3.2. WhileOperation - во всех методах можно использовать только while
class ForOperation - 		2.3.3. ForOperation - во всех методах можно использовать только for
class ForEachOperation - 	2.3.4. ForEachOperation - во всех методах можно использовать только foreach

10. class Task2_4 - 2.4 Задачи в презентации. Для получения массивов вызывать ранее созданный метод arrayRandom (ArraysUtils.arrayRandom(50, 100))
		2.4.1. Сумма четных положительных элементов массива
		2.4.2. Максимальный из элементов массива с четными индексами
		2.4.3. Элементы массива, которые меньше среднего арифметического
		2.4.4. Найти два наименьших (минимальных) элемента массива
		2.4.5. Сжать массив, удалив элементы, принадлежащие интервалу
		2.4.6. Сумма цифр массива
11. В GIT - 3. Нарисовать блок схему алгоритма работы пузырьковой сортировки.

package Home_Work_2.sorts.*
12. class SortsUtils - 4.* Выполнить сортировку массива с числами:
		4.1. Создать класс SortsUtils. В этом классе написать следующие методы:
		4.1.1. Написать метод public static void bubble(int[] arr). 
		4.1.2. Написать метод public static void shake(int[] arr).
13. class SortsMain - Создать класс SortsMain. Все проверки пишутся в main.

